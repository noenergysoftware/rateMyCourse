# Generated by Django 2.1.7 on 2019-04-17 08:12

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=2048)),
                ('create_time', models.DateTimeField(default=datetime.datetime.now)),
                ('edit_time', models.DateTimeField(auto_now=True)),
                ('parent_comment', models.IntegerField(default=-1)),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('website', models.URLField(blank=True)),
                ('course_ID', models.CharField(max_length=50, null=True, unique=True)),
                ('description', models.CharField(blank=True, max_length=512)),
                ('course_type', models.CharField(blank=True, max_length=64)),
                ('credit', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('website', models.URLField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='HitCount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('count', models.BigIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='MakeComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rateMyCourse.Comment')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rateMyCourse.Course')),
            ],
        ),
        migrations.CreateModel(
            name='MakeRank',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rateMyCourse.Course')),
            ],
        ),
        migrations.CreateModel(
            name='Rank',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('difficulty_score', models.FloatField(default=0)),
                ('funny_score', models.FloatField(default=0)),
                ('gain_score', models.FloatField(default=0)),
                ('recommend_score', models.FloatField(default=0)),
                ('edit_time', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='rankCache',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.IntegerField(default=0)),
                ('difficulty_score', models.FloatField(default=0)),
                ('funny_score', models.FloatField(default=0)),
                ('gain_score', models.FloatField(default=0)),
                ('recommend_score', models.FloatField(default=0)),
                ('difficulty_position', models.FloatField(default=-1)),
                ('funny_position', models.FloatField(default=-1)),
                ('gain_position', models.FloatField(default=-1)),
                ('recommend_position', models.FloatField(default=-1)),
                ('total_position', models.FloatField(default=-1)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rateMyCourse.Course')),
            ],
        ),
        migrations.CreateModel(
            name='TeachCourse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rateMyCourse.Course')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rateMyCourse.Department')),
            ],
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('website', models.URLField(blank=True)),
                ('title', models.CharField(blank=True, max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=64, unique=True)),
                ('mail', models.EmailField(max_length=64, unique=True)),
                ('password', models.CharField(max_length=32)),
                ('role', models.CharField(choices=[('T', 'Teacher'), ('S', 'Student'), ('O', 'Other')], default='O', max_length=1)),
                ('self_introduction', models.CharField(blank=True, max_length=256)),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('A', 'Anonymous')], default='A', max_length=1)),
            ],
        ),
        migrations.AddField(
            model_name='teachcourse',
            name='teachers',
            field=models.ManyToManyField(to='rateMyCourse.Teacher'),
        ),
        migrations.AddField(
            model_name='makerank',
            name='rank',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rateMyCourse.Rank'),
        ),
        migrations.AddField(
            model_name='makerank',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rateMyCourse.User'),
        ),
        migrations.AddField(
            model_name='makecomment',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rateMyCourse.User'),
        ),
        migrations.AddField(
            model_name='comment',
            name='teacher',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='rateMyCourse.Teacher'),
        ),
    ]
